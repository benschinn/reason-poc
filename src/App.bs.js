// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactRedux = require("react-redux");

function str(prim) {
  return prim;
}

function noop(param) {
  return /* () */0;
}

function App(Props) {
  var match = Props.counter;
  var counter = match !== undefined ? match : 0;
  var match$1 = Props.incrementCounter;
  var incrementCounter = match$1 !== undefined ? match$1 : noop;
  var match$2 = Props.decrementCounter;
  var decrementCounter = match$2 !== undefined ? match$2 : noop;
  return React.createElement("div", undefined, React.createElement("h1", undefined, "ReasonReact POC"), React.createElement("p", undefined, String(counter)), React.createElement("button", {
                  onClick: (function (_e) {
                      return Curry._1(incrementCounter, /* () */0);
                    })
                }, "Increment"), React.createElement("button", {
                  onClick: (function (_e) {
                      return Curry._1(decrementCounter, /* () */0);
                    })
                }, "Decrement"));
}

function mapDispatchToProps(dispatch) {
  return {
          incrementCounter: (function (param) {
              return Curry._1(dispatch, {
                          type: "counter/increment",
                          tag: /* Increment */0
                        });
            }),
          decrementCounter: (function (param) {
              return Curry._1(dispatch, {
                          type: "counter/decrement",
                          tag: /* Decrement */1
                        });
            })
        };
}

function mapStateToProps(state) {
  return {
          counter: state.counter.counter
        };
}

var connect = ReactRedux.connect(mapStateToProps, mapDispatchToProps);

((App = connect(App)));

var make = App;

exports.str = str;
exports.noop = noop;
exports.make = make;
exports.mapDispatchToProps = mapDispatchToProps;
exports.mapStateToProps = mapStateToProps;
exports.connect = connect;
/* connect Not a pure module */
